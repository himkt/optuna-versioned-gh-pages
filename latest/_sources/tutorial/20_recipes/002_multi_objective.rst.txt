
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/20_recipes/002_multi_objective.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorial_20_recipes_002_multi_objective.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_20_recipes_002_multi_objective.py:


.. _multi_objective:

Multi-objective Optimization with Optuna
========================================

This tutorial showcases Optuna's multi-objective optimization feature by
optimizing the validation accuracy of Fashion MNIST dataset and the FLOPS of the model implemented in PyTorch.

We use `thop <https://github.com/Lyken17/pytorch-OpCounter>`_ to measure FLOPS.

.. GENERATED FROM PYTHON SOURCE LINES 12-74

.. code-block:: default


    import thop
    import torch
    import torch.nn as nn
    import torch.nn.functional as F
    import torchvision

    import optuna


    DEVICE = torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu")
    DIR = ".."
    BATCHSIZE = 128
    N_TRAIN_EXAMPLES = BATCHSIZE * 30
    N_VALID_EXAMPLES = BATCHSIZE * 10


    def define_model(trial):
        n_layers = trial.suggest_int("n_layers", 1, 3)
        layers = []

        in_features = 28 * 28
        for i in range(n_layers):
            out_features = trial.suggest_int("n_units_l{}".format(i), 4, 128)
            layers.append(nn.Linear(in_features, out_features))
            layers.append(nn.ReLU())
            p = trial.suggest_float("dropout_{}".format(i), 0.2, 0.5)
            layers.append(nn.Dropout(p))

            in_features = out_features

        layers.append(nn.Linear(in_features, 10))
        layers.append(nn.LogSoftmax(dim=1))

        return nn.Sequential(*layers)


    # Defines training and evaluation.
    def train_model(model, optimizer, train_loader):
        model.train()
        for batch_idx, (data, target) in enumerate(train_loader):
            data, target = data.view(-1, 28 * 28).to(DEVICE), target.to(DEVICE)
            optimizer.zero_grad()
            F.nll_loss(model(data), target).backward()
            optimizer.step()


    def eval_model(model, valid_loader):
        model.eval()
        correct = 0
        with torch.no_grad():
            for batch_idx, (data, target) in enumerate(valid_loader):
                data, target = data.view(-1, 28 * 28).to(DEVICE), target.to(DEVICE)
                pred = model(data).argmax(dim=1, keepdim=True)
                correct += pred.eq(target.view_as(pred)).sum().item()

        accuracy = correct / N_VALID_EXAMPLES

        flops, _ = thop.profile(model, inputs=(torch.randn(1, 28 * 28).to(DEVICE),), verbose=False)
        return flops, accuracy









.. GENERATED FROM PYTHON SOURCE LINES 75-77

Define multi-objective objective function.
Objectives are FLOPS and accuracy.

.. GENERATED FROM PYTHON SOURCE LINES 77-107

.. code-block:: default

    def objective(trial):
        train_dataset = torchvision.datasets.FashionMNIST(
            DIR, train=True, download=True, transform=torchvision.transforms.ToTensor()
        )
        train_loader = torch.utils.data.DataLoader(
            torch.utils.data.Subset(train_dataset, list(range(N_TRAIN_EXAMPLES))),
            batch_size=BATCHSIZE,
            shuffle=True,
        )

        val_dataset = torchvision.datasets.FashionMNIST(
            DIR, train=False, transform=torchvision.transforms.ToTensor()
        )
        val_loader = torch.utils.data.DataLoader(
            torch.utils.data.Subset(val_dataset, list(range(N_VALID_EXAMPLES))),
            batch_size=BATCHSIZE,
            shuffle=True,
        )
        model = define_model(trial).to(DEVICE)

        optimizer = torch.optim.Adam(
            model.parameters(), trial.suggest_float("lr", 1e-5, 1e-1, log=True)
        )

        for epoch in range(10):
            train_model(model, optimizer, train_loader)
        flops, accuracy = eval_model(model, val_loader)
        return flops, accuracy









.. GENERATED FROM PYTHON SOURCE LINES 108-115

Run multi-objective optimization
--------------------------------

If your optimization problem is multi-objective,
Optuna assumes that you will specify the optimization direction for each objective.
Specifically, in this example, we want to minimize the FLOPS (we want a faster model)
and maximize the accuracy. So we set ``directions`` to ``["minimize", "maximize"]``.

.. GENERATED FROM PYTHON SOURCE LINES 115-121

.. code-block:: default

    study = optuna.create_study(directions=["minimize", "maximize"])
    study.optimize(objective, n_trials=30, timeout=300)

    print("Number of finished trials: ", len(study.trials))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to ../FashionMNIST/raw/train-images-idx3-ubyte.gz
      0%|          | 0/26421880 [00:00<?, ?it/s]      0%|          | 13312/26421880 [00:00<03:56, 111537.76it/s]      0%|          | 44032/26421880 [00:00<02:14, 196083.50it/s]      0%|          | 103424/26421880 [00:00<01:19, 331710.63it/s]      1%|          | 224256/26421880 [00:00<00:44, 590666.36it/s]      2%|1         | 464896/26421880 [00:00<00:23, 1094693.68it/s]      4%|3         | 946176/26421880 [00:00<00:12, 2074755.67it/s]      7%|7         | 1907712/26421880 [00:00<00:06, 3999788.50it/s]     15%|#4        | 3832832/26421880 [00:00<00:02, 7801837.42it/s]     25%|##4       | 6604800/26421880 [00:01<00:01, 12545061.45it/s]     36%|###5      | 9422848/26421880 [00:01<00:01, 15891173.96it/s]     47%|####6     | 12324864/26421880 [00:01<00:00, 18397908.60it/s]     57%|#####7    | 15069184/26421880 [00:01<00:00, 19730475.04it/s]     68%|######7   | 17936384/26421880 [00:01<00:00, 20960496.04it/s]     79%|#######8  | 20781056/26421880 [00:01<00:00, 21737362.17it/s]     90%|########9 | 23648256/26421880 [00:01<00:00, 22361682.39it/s]    26422272it [00:01, 14315925.16it/s]                              
    Extracting ../FashionMNIST/raw/train-images-idx3-ubyte.gz to ../FashionMNIST/raw
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to ../FashionMNIST/raw/train-labels-idx1-ubyte.gz
      0%|          | 0/29515 [00:00<?, ?it/s]     45%|####5     | 13312/29515 [00:00<00:00, 113506.83it/s]    29696it [00:00, 251650.78it/s]                           
    Extracting ../FashionMNIST/raw/train-labels-idx1-ubyte.gz to ../FashionMNIST/raw
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to ../FashionMNIST/raw/t10k-images-idx3-ubyte.gz
      0%|          | 0/4422102 [00:00<?, ?it/s]      0%|          | 13312/4422102 [00:00<00:39, 111848.55it/s]      1%|          | 43008/4422102 [00:00<00:22, 192106.83it/s]      2%|2         | 103424/4422102 [00:00<00:12, 334960.58it/s]      5%|4         | 211968/4422102 [00:00<00:07, 560768.01it/s]     10%|9         | 441344/4422102 [00:00<00:03, 1049617.34it/s]     20%|##        | 899072/4422102 [00:00<00:01, 1992588.90it/s]     41%|####1     | 1815552/4422102 [00:00<00:00, 3842735.25it/s]     83%|########2 | 3648512/4422102 [00:00<00:00, 7491532.92it/s]    4422656it [00:00, 4585956.25it/s]                             
    Extracting ../FashionMNIST/raw/t10k-images-idx3-ubyte.gz to ../FashionMNIST/raw
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to ../FashionMNIST/raw/t10k-labels-idx1-ubyte.gz
      0%|          | 0/5148 [00:00<?, ?it/s]    6144it [00:00, 27620368.46it/s]         
    Extracting ../FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to ../FashionMNIST/raw
    Processing...
    /opt/hostedtoolcache/Python/3.7.10/x64/lib/python3.7/site-packages/torchvision/datasets/mnist.py:479: UserWarning:

    The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:143.)

    Done!
    Number of finished trials:  30




.. GENERATED FROM PYTHON SOURCE LINES 122-123

Check trials on pareto front visually

.. GENERATED FROM PYTHON SOURCE LINES 123-126

.. code-block:: default

    optuna.visualization.plot_pareto_front(study, target_names=["FLOPS", "accuracy"])






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/optuna-versioned-gh-pages/optuna-versioned-gh-pages/tutorial/20_recipes/002_multi_objective.py:123: ExperimentalWarning:

    plot_pareto_front is experimental (supported from v2.4.0). The interface can change in the future.



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>                <div id="7310bc26-4932-49ca-9e05-79f0cf5567a4" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("7310bc26-4932-49ca-9e05-79f0cf5567a4")) {                    Plotly.newPlot(                        "7310bc26-4932-49ca-9e05-79f0cf5567a4",                        [{"hovertemplate": "%{text}<extra>Trial</extra>", "marker": {"color": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27], "colorbar": {"title": {"text": "#Trials"}}, "colorscale": [[0.0, "rgb(247,251,255)"], [0.125, "rgb(222,235,247)"], [0.25, "rgb(198,219,239)"], [0.375, "rgb(158,202,225)"], [0.5, "rgb(107,174,214)"], [0.625, "rgb(66,146,198)"], [0.75, "rgb(33,113,181)"], [0.875, "rgb(8,81,156)"], [1.0, "rgb(8,48,107)"]], "line": {"color": "Grey", "width": 0.5}}, "mode": "markers", "showlegend": false, "text": ["{<br>  \"number\": 0,<br>  \"values\": [<br>    18262.0,<br>    0.3375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 23,<br>    \"dropout_0\": 0.2009168145383922,<br>    \"lr\": 1.6256747908193088e-05<br>  }<br>}", "{<br>  \"number\": 1,<br>  \"values\": [<br>    69748.0,<br>    0.7796875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 80,<br>    \"dropout_0\": 0.23390185298782962,<br>    \"n_units_l1\": 66,<br>    \"dropout_1\": 0.3860541407062754,<br>    \"n_units_l2\": 23,<br>    \"dropout_2\": 0.3146204400174266,<br>    \"lr\": 0.0025079477634168835<br>  }<br>}", "{<br>  \"number\": 2,<br>  \"values\": [<br>    94425.0,<br>    0.1015625<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 103,<br>    \"dropout_0\": 0.2536569331952996,<br>    \"n_units_l1\": 121,<br>    \"dropout_1\": 0.3025109330319674,<br>    \"lr\": 0.09529934953625292<br>  }<br>}", "{<br>  \"number\": 3,<br>  \"values\": [<br>    108357.0,<br>    0.45078125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 121,<br>    \"dropout_0\": 0.2118157669620746,<br>    \"n_units_l1\": 103,<br>    \"dropout_1\": 0.20986382580940116,<br>    \"lr\": 1.197463505857488e-05<br>  }<br>}", "{<br>  \"number\": 4,<br>  \"values\": [<br>    12430.0,<br>    0.41484375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 10,<br>    \"dropout_0\": 0.37381242750666477,<br>    \"n_units_l1\": 25,<br>    \"dropout_1\": 0.2213340848740593,<br>    \"n_units_l2\": 124,<br>    \"dropout_2\": 0.2673306988616521,<br>    \"lr\": 0.00014693816961798675<br>  }<br>}", "{<br>  \"number\": 6,<br>  \"values\": [<br>    62469.0,<br>    0.68359375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 77,<br>    \"dropout_0\": 0.4254042343791502,<br>    \"n_units_l1\": 23,<br>    \"dropout_1\": 0.3824578328136309,<br>    \"n_units_l2\": 10,<br>    \"dropout_2\": 0.3929242302662772,<br>    \"lr\": 0.002700439133666887<br>  }<br>}", "{<br>  \"number\": 7,<br>  \"values\": [<br>    76310.0,<br>    0.2234375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 92,<br>    \"dropout_0\": 0.3065495911351658,<br>    \"n_units_l1\": 41,<br>    \"dropout_1\": 0.21682956023843722,<br>    \"lr\": 1.10496709148446e-05<br>  }<br>}", "{<br>  \"number\": 8,<br>  \"values\": [<br>    93330.0,<br>    0.7828125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 107,<br>    \"dropout_0\": 0.43211781441310004,<br>    \"n_units_l1\": 38,<br>    \"dropout_1\": 0.23627930592651716,<br>    \"n_units_l2\": 112,<br>    \"dropout_2\": 0.4883528230679031,<br>    \"lr\": 0.008058875550373068<br>  }<br>}", "{<br>  \"number\": 9,<br>  \"values\": [<br>    41636.0,<br>    0.74921875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 52,<br>    \"dropout_0\": 0.38041955741197236,<br>    \"n_units_l1\": 14,<br>    \"dropout_1\": 0.36727536888692747,<br>    \"lr\": 0.0012097119275221602<br>  }<br>}", "{<br>  \"number\": 10,<br>  \"values\": [<br>    45258.0,<br>    0.6859375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 57,<br>    \"dropout_0\": 0.35885867690107076,<br>    \"lr\": 0.05226988673364092<br>  }<br>}", "{<br>  \"number\": 12,<br>  \"values\": [<br>    62726.0,<br>    0.6828125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 79,<br>    \"dropout_0\": 0.47077852421209654,<br>    \"lr\": 0.00012326124263095856<br>  }<br>}", "{<br>  \"number\": 13,<br>  \"values\": [<br>    77446.0,<br>    0.75390625<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 89,<br>    \"dropout_0\": 0.25669421261918096,<br>    \"n_units_l1\": 30,<br>    \"dropout_1\": 0.4699140185410994,<br>    \"n_units_l2\": 125,<br>    \"dropout_2\": 0.40892063050095223,<br>    \"lr\": 0.0010610706052726635<br>  }<br>}", "{<br>  \"number\": 14,<br>  \"values\": [<br>    29364.0,<br>    0.2515625<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 30,<br>    \"dropout_0\": 0.4202572086759868,<br>    \"n_units_l1\": 86,<br>    \"dropout_1\": 0.22491952208212848,<br>    \"n_units_l2\": 34,<br>    \"dropout_2\": 0.4907632387333459,<br>    \"lr\": 0.04962081330506771<br>  }<br>}", "{<br>  \"number\": 15,<br>  \"values\": [<br>    58393.0,<br>    0.784375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 59,<br>    \"dropout_0\": 0.49647141764503727,<br>    \"n_units_l1\": 79,<br>    \"dropout_1\": 0.34333811536481473,<br>    \"n_units_l2\": 84,<br>    \"dropout_2\": 0.3300631196389489,<br>    \"lr\": 0.003243532404447277<br>  }<br>}", "{<br>  \"number\": 17,<br>  \"values\": [<br>    49499.0,<br>    0.33828125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 59,<br>    \"dropout_0\": 0.3786195582756018,<br>    \"n_units_l1\": 47,<br>    \"dropout_1\": 0.368084525745201,<br>    \"lr\": 1.0080553628138623e-05<br>  }<br>}", "{<br>  \"number\": 19,<br>  \"values\": [<br>    101776.0,<br>    0.54296875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 123,<br>    \"dropout_0\": 0.45617007534872134,<br>    \"n_units_l1\": 28,<br>    \"dropout_1\": 0.3229455554224692,<br>    \"n_units_l2\": 50,<br>    \"dropout_2\": 0.2159906599384103,<br>    \"lr\": 0.00013590710837106578<br>  }<br>}", "{<br>  \"number\": 20,<br>  \"values\": [<br>    59550.0,<br>    0.7828125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 75,<br>    \"dropout_0\": 0.2305805797939786,<br>    \"lr\": 0.0004276190520039194<br>  }<br>}", "{<br>  \"number\": 21,<br>  \"values\": [<br>    59843.0,<br>    0.57421875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 67,<br>    \"dropout_0\": 0.4980510267168415,<br>    \"n_units_l1\": 95,<br>    \"dropout_1\": 0.2704233863393541,<br>    \"lr\": 0.03601361044920089<br>  }<br>}", "{<br>  \"number\": 22,<br>  \"values\": [<br>    62726.0,<br>    0.6<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 79,<br>    \"dropout_0\": 0.30904429575213443,<br>    \"lr\": 1.619438449178059e-05<br>  }<br>}", "{<br>  \"number\": 23,<br>  \"values\": [<br>    36750.0,<br>    0.60859375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 39,<br>    \"dropout_0\": 0.48306392702765794,<br>    \"n_units_l1\": 126,<br>    \"dropout_1\": 0.49929604516391907,<br>    \"lr\": 0.026287974891620082<br>  }<br>}", "{<br>  \"number\": 25,<br>  \"values\": [<br>    79685.0,<br>    0.696875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 99,<br>    \"dropout_0\": 0.4151828479430685,<br>    \"n_units_l1\": 13,<br>    \"dropout_1\": 0.20104715594287895,<br>    \"n_units_l2\": 34,<br>    \"dropout_2\": 0.20569165462686434,<br>    \"lr\": 0.0005796586566286098<br>  }<br>}", "{<br>  \"number\": 26,<br>  \"values\": [<br>    12513.0,<br>    0.51875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 13,<br>    \"dropout_0\": 0.4762941967407858,<br>    \"n_units_l1\": 47,<br>    \"dropout_1\": 0.3426273877062367,<br>    \"n_units_l2\": 30,<br>    \"dropout_2\": 0.44072106376229625,<br>    \"lr\": 0.0005046902758595291<br>  }<br>}", "{<br>  \"number\": 27,<br>  \"values\": [<br>    105276.0,<br>    0.5328125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 125,<br>    \"dropout_0\": 0.2623656711294752,<br>    \"n_units_l1\": 39,<br>    \"dropout_1\": 0.3231758299574588,<br>    \"n_units_l2\": 49,<br>    \"dropout_2\": 0.36565170231105537,<br>    \"lr\": 6.406793142765001e-05<br>  }<br>}"], "type": "scatter", "x": [18262.0, 69748.0, 94425.0, 108357.0, 12430.0, 62469.0, 76310.0, 93330.0, 41636.0, 45258.0, 62726.0, 77446.0, 29364.0, 58393.0, 49499.0, 101776.0, 59550.0, 59843.0, 62726.0, 36750.0, 79685.0, 12513.0, 105276.0], "y": [0.3375, 0.7796875, 0.1015625, 0.45078125, 0.41484375, 0.68359375, 0.2234375, 0.7828125, 0.74921875, 0.6859375, 0.6828125, 0.75390625, 0.2515625, 0.784375, 0.33828125, 0.54296875, 0.7828125, 0.57421875, 0.6, 0.60859375, 0.696875, 0.51875, 0.5328125]}, {"hovertemplate": "%{text}<extra>Best Trial</extra>", "marker": {"color": [5, 11, 16, 18, 24, 28, 29], "colorbar": {"title": {"text": "#Best trials"}, "x": 1.1, "xpad": 40}, "colorscale": [[0.0, "rgb(255,245,240)"], [0.125, "rgb(254,224,210)"], [0.25, "rgb(252,187,161)"], [0.375, "rgb(252,146,114)"], [0.5, "rgb(251,106,74)"], [0.625, "rgb(239,59,44)"], [0.75, "rgb(203,24,29)"], [0.875, "rgb(165,15,21)"], [1.0, "rgb(103,0,13)"]], "line": {"color": "Grey", "width": 0.5}}, "mode": "markers", "showlegend": false, "text": ["{<br>  \"number\": 5,<br>  \"values\": [<br>    11116.0,<br>    0.5328125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 14,<br>    \"dropout_0\": 0.3264230821065558,<br>    \"lr\": 0.00010154257886157583<br>  }<br>}", "{<br>  \"number\": 11,<br>  \"values\": [<br>    15378.0,<br>    0.56875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 3,<br>    \"n_units_l0\": 17,<br>    \"dropout_0\": 0.3198485156955347,<br>    \"n_units_l1\": 64,<br>    \"dropout_1\": 0.3805346100961584,<br>    \"n_units_l2\": 13,<br>    \"dropout_2\": 0.3763445347884683,<br>    \"lr\": 0.018314539079013252<br>  }<br>}", "{<br>  \"number\": 16,<br>  \"values\": [<br>    8734.0,<br>    0.178125<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 11,<br>    \"dropout_0\": 0.3707008239775307,<br>    \"lr\": 1.4384537797388013e-05<br>  }<br>}", "{<br>  \"number\": 18,<br>  \"values\": [<br>    95616.0,<br>    0.821875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 112,<br>    \"dropout_0\": 0.3953890997943642,<br>    \"n_units_l1\": 64,<br>    \"dropout_1\": 0.3317387102595065,<br>    \"lr\": 0.0018490751527860218<br>  }<br>}", "{<br>  \"number\": 24,<br>  \"values\": [<br>    50258.0,<br>    0.79921875<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 59,<br>    \"dropout_0\": 0.34682086708071747,<br>    \"n_units_l1\": 58,<br>    \"dropout_1\": 0.3638860211150925,<br>    \"lr\": 0.0023436314502093933<br>  }<br>}", "{<br>  \"number\": 28,<br>  \"values\": [<br>    44674.0,<br>    0.78984375<br>  ],<br>  \"params\": {<br>    \"n_layers\": 2,<br>    \"n_units_l0\": 52,<br>    \"dropout_0\": 0.4976721673659193,<br>    \"n_units_l1\": 63,<br>    \"dropout_1\": 0.43456471916923134,<br>    \"lr\": 0.004102476798021744<br>  }<br>}", "{<br>  \"number\": 29,<br>  \"values\": [<br>    30966.0,<br>    0.75<br>  ],<br>  \"params\": {<br>    \"n_layers\": 1,<br>    \"n_units_l0\": 39,<br>    \"dropout_0\": 0.24708113198567436,<br>    \"lr\": 0.00042059740974301506<br>  }<br>}"], "type": "scatter", "x": [11116.0, 15378.0, 8734.0, 95616.0, 50258.0, 44674.0, 30966.0], "y": [0.5328125, 0.56875, 0.178125, 0.821875, 0.79921875, 0.78984375, 0.75]}],                        {"template": {"data": {"bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}}, "type": "bar"}], "barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}}, "type": "barpolar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "histogram": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "histogram"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Pareto-front Plot"}, "xaxis": {"title": {"text": "FLOPS"}}, "yaxis": {"title": {"text": "accuracy"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 127-128

Learn which hyperparameters are affecting the flops most with hyperparameter importance.

.. GENERATED FROM PYTHON SOURCE LINES 128-131

.. code-block:: default

    optuna.visualization.plot_param_importances(
        study, target=lambda t: t.values[0], target_name="flops"
    )





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>                <div id="d2b397cc-ff23-434e-9880-a10b046631d6" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("d2b397cc-ff23-434e-9880-a10b046631d6")) {                    Plotly.newPlot(                        "d2b397cc-ff23-434e-9880-a10b046631d6",                        [{"cliponaxis": false, "hovertemplate": ["n_layers (IntUniformDistribution): 0.0003831245951282314<extra></extra>", "dropout_0 (UniformDistribution): 0.0012701416224737679<extra></extra>", "lr (LogUniformDistribution): 0.0018635649110773822<extra></extra>", "n_units_l0 (IntUniformDistribution): 0.9964831688713206<extra></extra>"], "marker": {"color": "rgb(66,146,198)"}, "orientation": "h", "text": ["0.0003831245951282314", "0.0012701416224737679", "0.0018635649110773822", "0.9964831688713206"], "textposition": "outside", "texttemplate": "%{text:.2f}", "type": "bar", "x": [0.0003831245951282314, 0.0012701416224737679, 0.0018635649110773822, 0.9964831688713206], "y": ["n_layers", "dropout_0", "lr", "n_units_l0"]}],                        {"showlegend": false, "template": {"data": {"bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}}, "type": "bar"}], "barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}}, "type": "barpolar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "histogram": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "histogram"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Hyperparameter Importances"}, "xaxis": {"title": {"text": "Importance for flops"}}, "yaxis": {"title": {"text": "Hyperparameter"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  41.724 seconds)


.. _sphx_glr_download_tutorial_20_recipes_002_multi_objective.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 002_multi_objective.py <002_multi_objective.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 002_multi_objective.ipynb <002_multi_objective.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
